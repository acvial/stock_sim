syntax = "proto3";
option optimize_for = SPEED;

package protocols;

// ------------------ SIMULATION INPUT --------------------- //
message SimulationRequest{

    enum BaseModelType{

        GEOMETRIC_BROWNIAN_MOTION = 0;
        ORNSTEIN_UHLENBECK = 1;
    }

    enum JumpDistribution{

        NONE = 0;
        LOGNORMAL = 1;
        NORMAL = 2;
    }

    enum SimulationMode{

        BATCH = 0;
        INTERACTIVE = 1;
    }

    BaseModelType model = 1;
    JumpDistribution jump_distribution = 2;
    Parameters parameters = 3;
    IntegrationConfig integration = 4;
    LogConfig log_config = 5;
    SimulationMode mode = 6;
    optional BatchConfig batch_config = 7;
    
    uint64 timestamp = 8;
}

message Parameters {

    double drift = 1;
    double volatility = 2;
    double initial_price = 3;
  
    // Optional fields for jump 
    optional double jump_intensity = 4;
    optional double jump_mean = 5;
    optional double jump_stddev = 6;
  
    // Optional fields for OU
    optional double mean_reversion_rate = 7; // theta
}
  
message IntegrationConfig{

    enum Scheme{

        EULER_MARUYAMA = 0;
        MILSTEIN = 1;
        RUNGE_KUTTA = 3;
    }

    Scheme scheme = 1;
    double timestep = 2;
    double time_horizon = 3;
}

message LogConfig{

    enum LogLevel{

        DEBUG = 0;
        INFO = 1;
        ERROR = 2;
    }

    LogLevel level = 1;
  
    bool log_each_path = 2;
    bool log_stats = 3;
}

message BatchConfig{

    message Interval{
        
        double a = 1;
        double b = 2;
    }

    uint32 num_paths = 1;
    bool mean_crossing_time = 2;
    optional Interval interval = 3;
}

// ------------------ SIMULATION OUTPUT --------------------- //

message BatchResult{

    repeated double expected_path = 1;
    repeated double variance_path = 2;

    optional MeanCrossingResults crossing_results = 3;
}

message MeanCrossingResults{

    uint32 total_number_of_paths = 1;
    uint32 number_of_above_crossings = 2;
    uint32 number_of_below_crossings = 3;
    double expected_crossing_time = 4;
    double expected_crossing_price = 5;
}